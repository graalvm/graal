/*
 * Copyright (c) 2021, 2021, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */
package com.oracle.truffle.espresso.impl;

import com.oracle.truffle.espresso.descriptors.StaticSymbols;
import com.oracle.truffle.espresso.descriptors.Symbol;

import java.nio.file.Path;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

public final class ParserKlassCacheListProvider {
    public List<Symbol<Symbol.Type>> DefaultClassList = Collections.unmodifiableList(Arrays.asList(
                    StaticSymbols.putType("Lcom/oracle/truffle/espresso/polyglot/ArityException;"),
                    StaticSymbols.putType("Lcom/oracle/truffle/espresso/polyglot/ExceptionType;"),
                    StaticSymbols.putType("Lcom/oracle/truffle/espresso/polyglot/ForeignException;"),
                    StaticSymbols.putType("Lcom/oracle/truffle/espresso/polyglot/InteropException;"),
                    StaticSymbols.putType("Lcom/oracle/truffle/espresso/polyglot/InvalidArrayIndexException;"),
                    StaticSymbols.putType("Lcom/oracle/truffle/espresso/polyglot/Polyglot;"),
                    StaticSymbols.putType("Lcom/oracle/truffle/espresso/polyglot/UnknownIdentifierException;"),
                    StaticSymbols.putType("Lcom/oracle/truffle/espresso/polyglot/UnsupportedMessageException;"),
                    StaticSymbols.putType("Lcom/oracle/truffle/espresso/polyglot/UnsupportedTypeException;"),
                    StaticSymbols.putType("Ljava/io/BufferedInputStream;"),
                    StaticSymbols.putType("Ljava/io/BufferedOutputStream;"),
                    StaticSymbols.putType("Ljava/io/BufferedReader;"),
                    StaticSymbols.putType("Ljava/io/BufferedWriter;"),
                    StaticSymbols.putType("Ljava/io/Closeable;"),
                    StaticSymbols.putType("Ljava/io/DefaultFileSystem;"),
                    StaticSymbols.putType("Ljava/io/ExpiringCache$1;"),
                    StaticSymbols.putType("Ljava/io/ExpiringCache$Entry;"),
                    StaticSymbols.putType("Ljava/io/ExpiringCache;"),
                    StaticSymbols.putType("Ljava/io/File$PathStatus;"),
                    StaticSymbols.putType("Ljava/io/File;"),
                    StaticSymbols.putType("Ljava/io/FileDescriptor$1;"),
                    StaticSymbols.putType("Ljava/io/FileDescriptor;"),
                    StaticSymbols.putType("Ljava/io/FileInputStream$1;"),
                    StaticSymbols.putType("Ljava/io/FileInputStream;"),
                    StaticSymbols.putType("Ljava/io/FileOutputStream;"),
                    StaticSymbols.putType("Ljava/io/FilePermission$1;"),
                    StaticSymbols.putType("Ljava/io/FilePermission;"),
                    StaticSymbols.putType("Ljava/io/FilePermissionCollection;"),
                    StaticSymbols.putType("Ljava/io/FileReader;"),
                    StaticSymbols.putType("Ljava/io/FileSystem;"),
                    StaticSymbols.putType("Ljava/io/FilterInputStream;"),
                    StaticSymbols.putType("Ljava/io/FilterOutputStream;"),
                    StaticSymbols.putType("Ljava/io/Flushable;"),
                    StaticSymbols.putType("Ljava/io/InputStream;"),
                    StaticSymbols.putType("Ljava/io/InputStreamReader;"),
                    StaticSymbols.putType("Ljava/io/ObjectStreamField;"),
                    StaticSymbols.putType("Ljava/io/OutputStream;"),
                    StaticSymbols.putType("Ljava/io/OutputStreamWriter;"),
                    StaticSymbols.putType("Ljava/io/PrintStream;"),
                    StaticSymbols.putType("Ljava/io/Reader;"),
                    StaticSymbols.putType("Ljava/io/Serializable;"),
                    StaticSymbols.putType("Ljava/io/UnixFileSystem;"),
                    StaticSymbols.putType("Ljava/io/Writer;"),
                    StaticSymbols.putType("Ljava/lang/AbstractMethodError;"),
                    StaticSymbols.putType("Ljava/lang/AbstractStringBuilder;"),
                    StaticSymbols.putType("Ljava/lang/Appendable;"),
                    StaticSymbols.putType("Ljava/lang/ArithmeticException;"),
                    StaticSymbols.putType("Ljava/lang/ArrayIndexOutOfBoundsException;"),
                    StaticSymbols.putType("Ljava/lang/ArrayStoreException;"),
                    StaticSymbols.putType("Ljava/lang/AssertionStatusDirectives;"),
                    StaticSymbols.putType("Ljava/lang/AutoCloseable;"),
                    StaticSymbols.putType("Ljava/lang/Boolean;"),
                    StaticSymbols.putType("Ljava/lang/BootstrapMethodError;"),
                    StaticSymbols.putType("Ljava/lang/Byte;"),
                    StaticSymbols.putType("Ljava/lang/Character;"),
                    StaticSymbols.putType("Ljava/lang/CharacterData;"),
                    StaticSymbols.putType("Ljava/lang/CharacterDataLatin1;"),
                    StaticSymbols.putType("Ljava/lang/CharSequence;"),
                    StaticSymbols.putType("Ljava/lang/Class$1;"),
                    StaticSymbols.putType("Ljava/lang/Class$3;"),
                    StaticSymbols.putType("Ljava/lang/Class$AnnotationData;"),
                    StaticSymbols.putType("Ljava/lang/Class$Atomic;"),
                    StaticSymbols.putType("Ljava/lang/Class$MethodArray;"),
                    StaticSymbols.putType("Ljava/lang/Class$ReflectionData;"),
                    StaticSymbols.putType("Ljava/lang/Class;"),
                    StaticSymbols.putType("Ljava/lang/ClassCastException;"),
                    StaticSymbols.putType("Ljava/lang/ClassCircularityError;"),
                    StaticSymbols.putType("Ljava/lang/ClassFormatError;"),
                    StaticSymbols.putType("Ljava/lang/ClassLoader$3;"),
                    StaticSymbols.putType("Ljava/lang/ClassLoader$NativeLibrary;"),
                    StaticSymbols.putType("Ljava/lang/ClassLoader$ParallelLoaders;"),
                    StaticSymbols.putType("Ljava/lang/ClassLoader;"),
                    StaticSymbols.putType("Ljava/lang/ClassNotFoundException;"),
                    StaticSymbols.putType("Ljava/lang/ClassValue$ClassValueMap;"),
                    StaticSymbols.putType("Ljava/lang/Cloneable;"),
                    StaticSymbols.putType("Ljava/lang/CloneNotSupportedException;"),
                    StaticSymbols.putType("Ljava/lang/Comparable;"),
                    StaticSymbols.putType("Ljava/lang/Double;"),
                    StaticSymbols.putType("Ljava/lang/Enum;"),
                    StaticSymbols.putType("Ljava/lang/Error;"),
                    StaticSymbols.putType("Ljava/lang/Exception;"),
                    StaticSymbols.putType("Ljava/lang/ExceptionInInitializerError;"),
                    StaticSymbols.putType("Ljava/lang/Float;"),
                    StaticSymbols.putType("Ljava/lang/IllegalAccessError;"),
                    StaticSymbols.putType("Ljava/lang/IllegalArgumentException;"),
                    StaticSymbols.putType("Ljava/lang/IllegalMonitorStateException;"),
                    StaticSymbols.putType("Ljava/lang/IncompatibleClassChangeError;"),
                    StaticSymbols.putType("Ljava/lang/IndexOutOfBoundsException;"),
                    StaticSymbols.putType("Ljava/lang/InstantiationError;"),
                    StaticSymbols.putType("Ljava/lang/InstantiationException;"),
                    StaticSymbols.putType("Ljava/lang/Integer;"),
                    StaticSymbols.putType("Ljava/lang/InternalError;"),
                    StaticSymbols.putType("Ljava/lang/InterruptedException;"),
                    StaticSymbols.putType("Ljava/lang/invoke/CallSite;"),
                    StaticSymbols.putType("Ljava/lang/invoke/LambdaForm;"),
                    StaticSymbols.putType("Ljava/lang/invoke/MemberName;"),
                    StaticSymbols.putType("Ljava/lang/invoke/MethodHandle;"),
                    StaticSymbols.putType("Ljava/lang/invoke/MethodHandleNatives;"),
                    StaticSymbols.putType("Ljava/lang/invoke/MethodHandles;"),
                    StaticSymbols.putType("Ljava/lang/invoke/MethodType;"),
                    StaticSymbols.putType("Ljava/lang/Iterable;"),
                    StaticSymbols.putType("Ljava/lang/LinkageError;"),
                    StaticSymbols.putType("Ljava/lang/Long;"),
                    StaticSymbols.putType("Ljava/lang/management/MemoryUsage;"),
                    StaticSymbols.putType("Ljava/lang/management/ThreadInfo;"),
                    StaticSymbols.putType("Ljava/lang/Math;"),
                    StaticSymbols.putType("Ljava/lang/NegativeArraySizeException;"),
                    StaticSymbols.putType("Ljava/lang/NoClassDefFoundError;"),
                    StaticSymbols.putType("Ljava/lang/NoSuchFieldError;"),
                    StaticSymbols.putType("Ljava/lang/NoSuchFieldException;"),
                    StaticSymbols.putType("Ljava/lang/NoSuchMethodError;"),
                    StaticSymbols.putType("Ljava/lang/NoSuchMethodException;"),
                    StaticSymbols.putType("Ljava/lang/NullPointerException;"),
                    StaticSymbols.putType("Ljava/lang/Number;"),
                    StaticSymbols.putType("Ljava/lang/OutOfMemoryError;"),
                    StaticSymbols.putType("Ljava/lang/Readable;"),
                    StaticSymbols.putType("Ljava/lang/ref/Finalizer$FinalizerThread;"),
                    StaticSymbols.putType("Ljava/lang/ref/Finalizer;"),
                    StaticSymbols.putType("Ljava/lang/ref/FinalReference;"),
                    StaticSymbols.putType("Ljava/lang/ref/PhantomReference;"),
                    StaticSymbols.putType("Ljava/lang/ref/Reference$1;"),
                    StaticSymbols.putType("Ljava/lang/ref/Reference$Lock;"),
                    StaticSymbols.putType("Ljava/lang/ref/Reference$ReferenceHandler;"),
                    StaticSymbols.putType("Ljava/lang/ref/Reference;"),
                    StaticSymbols.putType("Ljava/lang/ref/ReferenceQueue$Lock;"),
                    StaticSymbols.putType("Ljava/lang/ref/ReferenceQueue$Null;"),
                    StaticSymbols.putType("Ljava/lang/ref/ReferenceQueue;"),
                    StaticSymbols.putType("Ljava/lang/ref/SoftReference;"),
                    StaticSymbols.putType("Ljava/lang/ref/WeakReference;"),
                    StaticSymbols.putType("Ljava/lang/reflect/AccessibleObject;"),
                    StaticSymbols.putType("Ljava/lang/reflect/AnnotatedElement;"),
                    StaticSymbols.putType("Ljava/lang/reflect/Array;"),
                    StaticSymbols.putType("Ljava/lang/reflect/Constructor;"),
                    StaticSymbols.putType("Ljava/lang/reflect/Executable;"),
                    StaticSymbols.putType("Ljava/lang/reflect/Field;"),
                    StaticSymbols.putType("Ljava/lang/reflect/GenericDeclaration;"),
                    StaticSymbols.putType("Ljava/lang/reflect/InvocationTargetException;"),
                    StaticSymbols.putType("Ljava/lang/reflect/Member;"),
                    StaticSymbols.putType("Ljava/lang/reflect/Method;"),
                    StaticSymbols.putType("Ljava/lang/reflect/Modifier;"),
                    StaticSymbols.putType("Ljava/lang/reflect/Parameter;"),
                    StaticSymbols.putType("Ljava/lang/reflect/ReflectAccess;"),
                    StaticSymbols.putType("Ljava/lang/reflect/ReflectPermission;"),
                    StaticSymbols.putType("Ljava/lang/reflect/Type;"),
                    StaticSymbols.putType("Ljava/lang/ReflectiveOperationException;"),
                    StaticSymbols.putType("Ljava/lang/Runnable;"),
                    StaticSymbols.putType("Ljava/lang/Runtime;"),
                    StaticSymbols.putType("Ljava/lang/RuntimeException;"),
                    StaticSymbols.putType("Ljava/lang/RuntimePermission;"),
                    StaticSymbols.putType("Ljava/lang/SecurityException;"),
                    StaticSymbols.putType("Ljava/lang/Short;"),
                    StaticSymbols.putType("Ljava/lang/Shutdown;"),
                    StaticSymbols.putType("Ljava/lang/Shutdown$Lock;"),
                    StaticSymbols.putType("Ljava/lang/StackOverflowError;"),
                    StaticSymbols.putType("Ljava/lang/StackTraceElement;"),
                    StaticSymbols.putType("Ljava/lang/String$CaseInsensitiveComparator;"),
                    StaticSymbols.putType("Ljava/lang/String;"),
                    StaticSymbols.putType("Ljava/lang/StringBuffer;"),
                    StaticSymbols.putType("Ljava/lang/StringBuilder;"),
                    StaticSymbols.putType("Ljava/lang/StringCoding$StringDecoder;"),
                    StaticSymbols.putType("Ljava/lang/StringCoding$StringEncoder;"),
                    StaticSymbols.putType("Ljava/lang/StringCoding;"),
                    StaticSymbols.putType("Ljava/lang/StringIndexOutOfBoundsException;"),
                    StaticSymbols.putType("Ljava/lang/System$2;"),
                    StaticSymbols.putType("Ljava/lang/System;"),
                    StaticSymbols.putType("Ljava/lang/SystemClassLoaderAction;"),
                    StaticSymbols.putType("Ljava/lang/Terminator$1;"),
                    StaticSymbols.putType("Ljava/lang/Terminator;"),
                    StaticSymbols.putType("Ljava/lang/Thread$UncaughtExceptionHandler;"),
                    StaticSymbols.putType("Ljava/lang/Thread;"),
                    StaticSymbols.putType("Ljava/lang/ThreadDeath;"),
                    StaticSymbols.putType("Ljava/lang/ThreadGroup;"),
                    StaticSymbols.putType("Ljava/lang/ThreadLocal$ThreadLocalMap$Entry;"),
                    StaticSymbols.putType("Ljava/lang/ThreadLocal$ThreadLocalMap;"),
                    StaticSymbols.putType("Ljava/lang/ThreadLocal;"),
                    StaticSymbols.putType("Ljava/lang/Throwable;"),
                    StaticSymbols.putType("Ljava/lang/UnsatisfiedLinkError;"),
                    StaticSymbols.putType("Ljava/lang/UnsupportedClassVersionError;"),
                    StaticSymbols.putType("Ljava/lang/UnsupportedOperationException;"),
                    StaticSymbols.putType("Ljava/lang/VerifyError;"),
                    StaticSymbols.putType("Ljava/lang/VirtualMachineError;"),
                    StaticSymbols.putType("Ljava/lang/Void;"),
                    StaticSymbols.putType("Ljava/net/Parts;"),
                    StaticSymbols.putType("Ljava/net/URI$Parser;"),
                    StaticSymbols.putType("Ljava/net/URI;"),
                    StaticSymbols.putType("Ljava/net/URL;"),
                    StaticSymbols.putType("Ljava/net/URLClassLoader$1;"),
                    StaticSymbols.putType("Ljava/net/URLClassLoader$7;"),
                    StaticSymbols.putType("Ljava/net/URLClassLoader;"),
                    StaticSymbols.putType("Ljava/net/URLConnection;"),
                    StaticSymbols.putType("Ljava/net/URLStreamHandler;"),
                    StaticSymbols.putType("Ljava/net/URLStreamHandlerFactory;"),
                    StaticSymbols.putType("Ljava/nio/Bits$1;"),
                    StaticSymbols.putType("Ljava/nio/Bits;"),
                    StaticSymbols.putType("Ljava/nio/Buffer;"),
                    StaticSymbols.putType("Ljava/nio/ByteBuffer;"),
                    StaticSymbols.putType("Ljava/nio/ByteBufferAsLongBufferL;"),
                    StaticSymbols.putType("Ljava/nio/ByteOrder;"),
                    StaticSymbols.putType("Ljava/nio/CharBuffer;"),
                    StaticSymbols.putType("Ljava/nio/charset/Charset;"),
                    StaticSymbols.putType("Ljava/nio/charset/CharsetDecoder;"),
                    StaticSymbols.putType("Ljava/nio/charset/CharsetEncoder;"),
                    StaticSymbols.putType("Ljava/nio/charset/CoderResult$1;"),
                    StaticSymbols.putType("Ljava/nio/charset/CoderResult$2;"),
                    StaticSymbols.putType("Ljava/nio/charset/CoderResult$Cache;"),
                    StaticSymbols.putType("Ljava/nio/charset/CoderResult;"),
                    StaticSymbols.putType("Ljava/nio/charset/CodingErrorAction;"),
                    StaticSymbols.putType("Ljava/nio/charset/spi/CharsetProvider;"),
                    StaticSymbols.putType("Ljava/nio/DirectByteBuffer;"),
                    StaticSymbols.putType("Ljava/nio/file/attribute/BasicFileAttributes;"),
                    StaticSymbols.putType("Ljava/nio/file/attribute/PosixFileAttributes;"),
                    StaticSymbols.putType("Ljava/nio/file/FileSystem;"),
                    StaticSymbols.putType("Ljava/nio/file/Path;"),
                    StaticSymbols.putType("Ljava/nio/file/spi/FileSystemProvider;"),
                    StaticSymbols.putType("Ljava/nio/file/Watchable;"),
                    StaticSymbols.putType("Ljava/nio/HeapByteBuffer;"),
                    StaticSymbols.putType("Ljava/nio/HeapCharBuffer;"),
                    StaticSymbols.putType("Ljava/nio/LongBuffer;"),
                    StaticSymbols.putType("Ljava/nio/MappedByteBuffer;"),
                    StaticSymbols.putType("Ljava/security/AccessControlContext;"),
                    StaticSymbols.putType("Ljava/security/AccessController;"),
                    StaticSymbols.putType("Ljava/security/AllPermission;"),
                    StaticSymbols.putType("Ljava/security/BasicPermission;"),
                    StaticSymbols.putType("Ljava/security/BasicPermissionCollection;"),
                    StaticSymbols.putType("Ljava/security/cert/Certificate;"),
                    StaticSymbols.putType("Ljava/security/CodeSource;"),
                    StaticSymbols.putType("Ljava/security/Guard;"),
                    StaticSymbols.putType("Ljava/security/Permission;"),
                    StaticSymbols.putType("Ljava/security/PermissionCollection;"),
                    StaticSymbols.putType("Ljava/security/Permissions;"),
                    StaticSymbols.putType("Ljava/security/Principal;"),
                    StaticSymbols.putType("Ljava/security/PrivilegedAction;"),
                    StaticSymbols.putType("Ljava/security/PrivilegedActionException;"),
                    StaticSymbols.putType("Ljava/security/PrivilegedExceptionAction;"),
                    StaticSymbols.putType("Ljava/security/ProtectionDomain$2;"),
                    StaticSymbols.putType("Ljava/security/ProtectionDomain$JavaSecurityAccessImpl;"),
                    StaticSymbols.putType("Ljava/security/ProtectionDomain$Key;"),
                    StaticSymbols.putType("Ljava/security/ProtectionDomain;"),
                    StaticSymbols.putType("Ljava/security/SecureClassLoader;"),
                    StaticSymbols.putType("Ljava/security/UnresolvedPermission;"),
                    StaticSymbols.putType("Ljava/time/chrono/ChronoLocalDate;"),
                    StaticSymbols.putType("Ljava/time/chrono/ChronoLocalDateTime;"),
                    StaticSymbols.putType("Ljava/time/chrono/ChronoZonedDateTime;"),
                    StaticSymbols.putType("Ljava/time/Duration;"),
                    StaticSymbols.putType("Ljava/time/Instant;"),
                    StaticSymbols.putType("Ljava/time/LocalDate;"),
                    StaticSymbols.putType("Ljava/time/LocalDateTime;"),
                    StaticSymbols.putType("Ljava/time/LocalTime;"),
                    StaticSymbols.putType("Ljava/time/temporal/Temporal;"),
                    StaticSymbols.putType("Ljava/time/temporal/TemporalAccessor;"),
                    StaticSymbols.putType("Ljava/time/temporal/TemporalAdjuster;"),
                    StaticSymbols.putType("Ljava/time/temporal/TemporalAmount;"),
                    StaticSymbols.putType("Ljava/time/ZonedDateTime;"),
                    StaticSymbols.putType("Ljava/time/ZoneId;"),
                    StaticSymbols.putType("Ljava/util/AbstractCollection;"),
                    StaticSymbols.putType("Ljava/util/AbstractList;"),
                    StaticSymbols.putType("Ljava/util/AbstractMap;"),
                    StaticSymbols.putType("Ljava/util/AbstractSet;"),
                    StaticSymbols.putType("Ljava/util/ArrayList;"),
                    StaticSymbols.putType("Ljava/util/Arrays;"),
                    StaticSymbols.putType("Ljava/util/BitSet;"),
                    StaticSymbols.putType("Ljava/util/Collection;"),
                    StaticSymbols.putType("Ljava/util/Collections$EmptyList;"),
                    StaticSymbols.putType("Ljava/util/Collections$EmptyMap;"),
                    StaticSymbols.putType("Ljava/util/Collections$EmptySet;"),
                    StaticSymbols.putType("Ljava/util/Collections$SetFromMap;"),
                    StaticSymbols.putType("Ljava/util/Collections$SynchronizedCollection;"),
                    StaticSymbols.putType("Ljava/util/Collections$SynchronizedSet;"),
                    StaticSymbols.putType("Ljava/util/Collections$UnmodifiableCollection;"),
                    StaticSymbols.putType("Ljava/util/Collections$UnmodifiableList;"),
                    StaticSymbols.putType("Ljava/util/Collections$UnmodifiableRandomAccessList;"),
                    StaticSymbols.putType("Ljava/util/Collections;"),
                    StaticSymbols.putType("Ljava/util/Comparator;"),
                    StaticSymbols.putType("Ljava/util/concurrent/atomic/AtomicInteger;"),
                    StaticSymbols.putType("Ljava/util/concurrent/atomic/AtomicLong;"),
                    StaticSymbols.putType("Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl$1;"),
                    StaticSymbols.putType("Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl;"),
                    StaticSymbols.putType("Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;"),
                    StaticSymbols.putType("Ljava/util/concurrent/ConcurrentHashMap$CollectionView;"),
                    StaticSymbols.putType("Ljava/util/concurrent/ConcurrentHashMap$CounterCell;"),
                    StaticSymbols.putType("Ljava/util/concurrent/ConcurrentHashMap$EntrySetView;"),
                    StaticSymbols.putType("Ljava/util/concurrent/ConcurrentHashMap$KeySetView;"),
                    StaticSymbols.putType("Ljava/util/concurrent/ConcurrentHashMap$Node;"),
                    StaticSymbols.putType("Ljava/util/concurrent/ConcurrentHashMap$Segment;"),
                    StaticSymbols.putType("Ljava/util/concurrent/ConcurrentHashMap$ValuesView;"),
                    StaticSymbols.putType("Ljava/util/concurrent/ConcurrentHashMap;"),
                    StaticSymbols.putType("Ljava/util/concurrent/ConcurrentMap;"),
                    StaticSymbols.putType("Ljava/util/concurrent/locks/Lock;"),
                    StaticSymbols.putType("Ljava/util/concurrent/locks/ReentrantLock;"),
                    StaticSymbols.putType("Ljava/util/Date;"),
                    StaticSymbols.putType("Ljava/util/Dictionary;"),
                    StaticSymbols.putType("Ljava/util/Enumeration;"),
                    StaticSymbols.putType("Ljava/util/HashMap$Node;"),
                    StaticSymbols.putType("Ljava/util/HashMap$TreeNode;"),
                    StaticSymbols.putType("Ljava/util/HashMap;"),
                    StaticSymbols.putType("Ljava/util/Hashtable$Entry;"),
                    StaticSymbols.putType("Ljava/util/Hashtable$EntrySet;"),
                    StaticSymbols.putType("Ljava/util/Hashtable$Enumerator;"),
                    StaticSymbols.putType("Ljava/util/Hashtable;"),
                    StaticSymbols.putType("Ljava/util/Iterator;"),
                    StaticSymbols.putType("Ljava/util/LinkedHashMap$Entry;"),
                    StaticSymbols.putType("Ljava/util/LinkedHashMap;"),
                    StaticSymbols.putType("Ljava/util/List;"),
                    StaticSymbols.putType("Ljava/util/Locale$Cache;"),
                    StaticSymbols.putType("Ljava/util/Locale$LocaleKey;"),
                    StaticSymbols.putType("Ljava/util/Locale;"),
                    StaticSymbols.putType("Ljava/util/Map$Entry;"),
                    StaticSymbols.putType("Ljava/util/Map;"),
                    StaticSymbols.putType("Ljava/util/Objects;"),
                    StaticSymbols.putType("Ljava/util/Properties;"),
                    StaticSymbols.putType("Ljava/util/RandomAccess;"),
                    StaticSymbols.putType("Ljava/util/Set;"),
                    StaticSymbols.putType("Ljava/util/Stack;"),
                    StaticSymbols.putType("Ljava/util/StringTokenizer;"),
                    StaticSymbols.putType("Ljava/util/Vector;"),
                    StaticSymbols.putType("Ljava/util/WeakHashMap$Entry;"),
                    StaticSymbols.putType("Ljava/util/WeakHashMap$KeySet;"),
                    StaticSymbols.putType("Ljava/util/WeakHashMap;"),
                    StaticSymbols.putType("Ljava/util/zip/ZipConstants;"),
                    StaticSymbols.putType("Ljava/util/zip/ZipFile$1;"),
                    StaticSymbols.putType("Ljava/util/zip/ZipFile;"),
                    StaticSymbols.putType("Ljdk/internal/util/StaticProperty;"),
                    StaticSymbols.putType("Lsun/launcher/LauncherHelper;"),
                    StaticSymbols.putType("Lsun/management/ManagementFactory;"),
                    StaticSymbols.putType("Lsun/misc/Cleaner;"),
                    StaticSymbols.putType("Lsun/misc/InnocuousThread;"),
                    StaticSymbols.putType("Lsun/misc/JavaIOFileDescriptorAccess;"),
                    StaticSymbols.putType("Lsun/misc/JavaLangAccess;"),
                    StaticSymbols.putType("Lsun/misc/JavaLangRefAccess;"),
                    StaticSymbols.putType("Lsun/misc/JavaNetAccess;"),
                    StaticSymbols.putType("Lsun/misc/JavaNioAccess;"),
                    StaticSymbols.putType("Lsun/misc/JavaSecurityAccess;"),
                    StaticSymbols.putType("Lsun/misc/JavaSecurityProtectionDomainAccess;"),
                    StaticSymbols.putType("Lsun/misc/JavaUtilZipFileAccess;"),
                    StaticSymbols.putType("Lsun/misc/Launcher$AppClassLoader$1;"),
                    StaticSymbols.putType("Lsun/misc/Launcher$AppClassLoader;"),
                    StaticSymbols.putType("Lsun/misc/Launcher$ExtClassLoader$1;"),
                    StaticSymbols.putType("Lsun/misc/Launcher$ExtClassLoader;"),
                    StaticSymbols.putType("Lsun/misc/Launcher$Factory;"),
                    StaticSymbols.putType("Lsun/misc/Launcher;"),
                    StaticSymbols.putType("Lsun/misc/MetaIndex;"),
                    StaticSymbols.putType("Lsun/misc/NativeSignalHandler;"),
                    StaticSymbols.putType("Lsun/misc/OSEnvironment;"),
                    StaticSymbols.putType("Lsun/misc/Perf$GetPerfAction;"),
                    StaticSymbols.putType("Lsun/misc/Perf;"),
                    StaticSymbols.putType("Lsun/misc/PerfCounter$CoreCounters;"),
                    StaticSymbols.putType("Lsun/misc/PerfCounter;"),
                    StaticSymbols.putType("Lsun/misc/Resource;"),
                    StaticSymbols.putType("Lsun/misc/SharedSecrets;"),
                    StaticSymbols.putType("Lsun/misc/Signal;"),
                    StaticSymbols.putType("Lsun/misc/SignalHandler;"),
                    StaticSymbols.putType("Lsun/misc/Unsafe;"),
                    StaticSymbols.putType("Lsun/misc/URLClassPath$3;"),
                    StaticSymbols.putType("Lsun/misc/URLClassPath$FileLoader$1;"),
                    StaticSymbols.putType("Lsun/misc/URLClassPath$FileLoader;"),
                    StaticSymbols.putType("Lsun/misc/URLClassPath$JarLoader;"),
                    StaticSymbols.putType("Lsun/misc/URLClassPath$Loader;"),
                    StaticSymbols.putType("Lsun/misc/URLClassPath;"),
                    StaticSymbols.putType("Lsun/misc/Version;"),
                    StaticSymbols.putType("Lsun/misc/VM;"),
                    StaticSymbols.putType("Lsun/net/util/IPAddressUtil;"),
                    StaticSymbols.putType("Lsun/net/util/URLUtil;"),
                    StaticSymbols.putType("Lsun/net/www/MessageHeader;"),
                    StaticSymbols.putType("Lsun/net/www/ParseUtil;"),
                    StaticSymbols.putType("Lsun/net/www/protocol/file/FileURLConnection;"),
                    StaticSymbols.putType("Lsun/net/www/protocol/file/Handler;"),
                    StaticSymbols.putType("Lsun/net/www/protocol/jar/Handler;"),
                    StaticSymbols.putType("Lsun/net/www/URLConnection;"),
                    StaticSymbols.putType("Lsun/nio/ByteBuffered;"),
                    StaticSymbols.putType("Lsun/nio/ch/DirectBuffer;"),
                    StaticSymbols.putType("Lsun/nio/cs/ArrayDecoder;"),
                    StaticSymbols.putType("Lsun/nio/cs/ArrayEncoder;"),
                    StaticSymbols.putType("Lsun/nio/cs/FastCharsetProvider;"),
                    StaticSymbols.putType("Lsun/nio/cs/HistoricallyNamedCharset;"),
                    StaticSymbols.putType("Lsun/nio/cs/StandardCharsets$Aliases;"),
                    StaticSymbols.putType("Lsun/nio/cs/StandardCharsets$Cache;"),
                    StaticSymbols.putType("Lsun/nio/cs/StandardCharsets$Classes;"),
                    StaticSymbols.putType("Lsun/nio/cs/StandardCharsets;"),
                    StaticSymbols.putType("Lsun/nio/cs/StreamDecoder;"),
                    StaticSymbols.putType("Lsun/nio/cs/StreamEncoder;"),
                    StaticSymbols.putType("Lsun/nio/cs/Unicode;"),
                    StaticSymbols.putType("Lsun/nio/cs/UTF_8$Decoder;"),
                    StaticSymbols.putType("Lsun/nio/cs/UTF_8$Encoder;"),
                    StaticSymbols.putType("Lsun/nio/cs/UTF_8;"),
                    StaticSymbols.putType("Lsun/nio/fs/AbstractFileSystemProvider;"),
                    StaticSymbols.putType("Lsun/nio/fs/AbstractPath;"),
                    StaticSymbols.putType("Lsun/nio/fs/DefaultFileSystemProvider;"),
                    StaticSymbols.putType("Lsun/nio/fs/LinuxFileSystem;"),
                    StaticSymbols.putType("Lsun/nio/fs/LinuxFileSystemProvider;"),
                    StaticSymbols.putType("Lsun/nio/fs/UnixFileAttributes;"),
                    StaticSymbols.putType("Lsun/nio/fs/UnixFileStoreAttributes;"),
                    StaticSymbols.putType("Lsun/nio/fs/UnixFileSystem;"),
                    StaticSymbols.putType("Lsun/nio/fs/UnixFileSystemProvider;"),
                    StaticSymbols.putType("Lsun/nio/fs/UnixMountEntry;"),
                    StaticSymbols.putType("Lsun/nio/fs/UnixNativeDispatcher$1;"),
                    StaticSymbols.putType("Lsun/nio/fs/UnixNativeDispatcher;"),
                    StaticSymbols.putType("Lsun/nio/fs/UnixPath;"),
                    StaticSymbols.putType("Lsun/nio/fs/Util;"),
                    StaticSymbols.putType("Lsun/reflect/annotation/AnnotationType;"),
                    StaticSymbols.putType("Lsun/reflect/ConstantPool;"),
                    StaticSymbols.putType("Lsun/reflect/ConstructorAccessor;"),
                    StaticSymbols.putType("Lsun/reflect/ConstructorAccessorImpl;"),
                    StaticSymbols.putType("Lsun/reflect/DelegatingClassLoader;"),
                    StaticSymbols.putType("Lsun/reflect/DelegatingConstructorAccessorImpl;"),
                    StaticSymbols.putType("Lsun/reflect/generics/repository/AbstractRepository;"),
                    StaticSymbols.putType("Lsun/reflect/generics/repository/ClassRepository;"),
                    StaticSymbols.putType("Lsun/reflect/generics/repository/GenericDeclRepository;"),
                    StaticSymbols.putType("Lsun/reflect/LangReflectAccess;"),
                    StaticSymbols.putType("Lsun/reflect/MagicAccessorImpl;"),
                    StaticSymbols.putType("Lsun/reflect/MethodAccessor;"),
                    StaticSymbols.putType("Lsun/reflect/MethodAccessorImpl;"),
                    StaticSymbols.putType("Lsun/reflect/misc/ReflectUtil;"),
                    StaticSymbols.putType("Lsun/reflect/NativeConstructorAccessorImpl;"),
                    StaticSymbols.putType("Lsun/reflect/Reflection;"),
                    StaticSymbols.putType("Lsun/reflect/ReflectionFactory$1;"),
                    StaticSymbols.putType("Lsun/reflect/ReflectionFactory$GetReflectionFactoryAction;"),
                    StaticSymbols.putType("Lsun/reflect/ReflectionFactory;"),
                    StaticSymbols.putType("Lsun/security/action/GetPropertyAction;"),
                    StaticSymbols.putType("Lsun/security/util/Debug;"),
                    StaticSymbols.putType("Lsun/util/locale/BaseLocale$Cache;"),
                    StaticSymbols.putType("Lsun/util/locale/BaseLocale$Key;"),
                    StaticSymbols.putType("Lsun/util/locale/BaseLocale;"),
                    StaticSymbols.putType("Lsun/util/locale/LocaleObjectCache$CacheEntry;"),
                    StaticSymbols.putType("Lsun/util/locale/LocaleObjectCache;"),
                    StaticSymbols.putType("Lsun/util/locale/LocaleUtils;"),
                    StaticSymbols.putType("Lsun/util/PreHashedMap;")
            )
    );

    public static List<Symbol<Symbol.Type>> fromFile(Path path) {
        // TODO
        return new ParserKlassCacheListProvider().DefaultClassList;
    }
}
